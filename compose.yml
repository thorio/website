x-shared-env: &shared_env
  NUXT_PUBLIC_LOGOUT_URL: "http://localhost:3000"
  NUXT_PUBLIC_LOGIN_URL: "http://home.localhost:3000"

services:
  base:
    # container doesn't need to run, we only need the built image
    command: -e 'process.exit()'
    image: base_image
    build: .

  traefik:
    image: traefik:3.1
    command: |-
      --providers.docker
      --entryPoints.http.address=":3000"
    ports:
      - 3000:3000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  errorpages:
    build: errorpages
    depends_on:
      - base
    labels:
      traefik.enable: true
      traefik.http.routers.errorpages.rule: PathPrefix(`/`)
      traefik.http.services.errorpages.loadbalancer.server.port: 8080
      traefik.http.middlewares.global-errors.errors.status: 500-599,404
      traefik.http.middlewares.global-errors.errors.query: /_error/{status}
      traefik.http.middlewares.global-errors.errors.service: errorpages@docker

  well-known:
    build: well-known
    labels:
      traefik.enable: true
      traefik.http.routers.well-known.rule: Host(`localhost`) && PathPrefix(`/.well-known/`)
      traefik.http.services.well-known.loadbalancer.server.port: 8080

  home:
    build: home
    depends_on:
      - base
    environment: *shared_env
    labels:
      traefik.enable: true
      traefik.http.routers.home.rule: Host(`home.localhost`)
      traefik.http.routers.home.middlewares: global-errors, home-headers
      traefik.http.services.home.loadbalancer.server.port: 8080

      # In production, these headers are set by forward auth
      traefik.http.middlewares.home-headers.headers.customrequestheaders.Remote-User: test-user
      traefik.http.middlewares.home-headers.headers.customrequestheaders.Remote-Name: Test User
      traefik.http.middlewares.home-headers.headers.customrequestheaders.Remote-Groups: service2,restOfServices,forbiddengroup

  web:
    build: web
    depends_on:
      - base
    environment: *shared_env
    labels:
      traefik.enable: true
      traefik.http.routers.web.rule: Host(`localhost`)
      traefik.http.routers.web.middlewares: global-errors
      traefik.http.services.web.loadbalancer.server.port: 8080
