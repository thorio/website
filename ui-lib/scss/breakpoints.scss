/*!
* Bootstrap's media breakpoint mixins, modified for @use and global function deprecations.
* Original can be found here: https://github.com/twbs/bootstrap/blob/e946bf7e9434a99d750baf9a0786fcf52c5ff8f7/scss/mixins/_breakpoints.scss
* Copyright (c) 2011-2023 The Bootstrap Authors
* MIT License applies.
*/

@use "sass:list";
@use "sass:map";

$breakpoints: (
	xxs: 0,
	xs: 420px,
	sm: 584px,
	md: 768px,
	lg: 992px,
	xl: 1200px,
	xxl: 1400px
);

@function next($name) {
	$breakpoint-names: map.keys($breakpoints);
	$n: list.index($breakpoint-names, $name);

	@if not $n {
		@error "breakpoint `#{$name}` not found in `#{$breakpointss}`";
	}

	@return if($n < list.length($breakpoint-names), list.nth($breakpoint-names, $n + 1), null);
}

@function br-min($name) {
	$min: map.get($breakpoints, $name);
	@return if($min != 0, $min, null);
}

@function br-max($name) {
	$max: map.get($breakpoints, $name);
	@return if($max and $max > 0, $max - 0.02, null);
}

@mixin up($name) {
	$min: br-min($name);

	@if $min {
		@media (min-width: $min) {
			@content;
		}
	} @else {
		@content;
	}
}

@mixin down($name) {
	$max: br-max($name);

	@if $max {
		@media (max-width: $max) {
			@content;
		}
	} @else {
		@content;
	}
}

@mixin between($lower, $upper) {
	$min: br-min($lower);
	$max: br-max($upper);

	@if $min != null and $max != null {
		@media (min-width: $min) and (max-width: $max) {
			@content;
		}
	} @else if $max == null {
		@include up($lower) {
			@content;
		}
	} @else if $min == null {
		@include down($upper) {
			@content;
		}
	}
}
